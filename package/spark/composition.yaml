apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: sparks.catalog.cluster.local
spec:
  compositeTypeRef:
    apiVersion: catalog.cluster.local/v1
    kind: SparkComposite

  writeConnectionSecretsToNamespace: crossplane-system

  mode: Pipeline
  pipeline:
    - step: get-environment-configs
      functionRef:
        name: crossplane-contrib-function-environment-configs
      input:
        apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
        kind: Input
        spec:
          environmentConfigs:
            - type: Reference
              ref:
                name: environment

    - step: spark
      functionRef:
        name: crossplane-contrib-function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |

            {{ $host := regexReplaceAll "[^a-z0-9-]" (.observed.composite.resource.spec.claimRef.name | lower) "" }}
            {{ $zone := index $.context "apiextensions.crossplane.io/environment" "zone" }}
            {{ $claim := .observed.composite.resource.spec.claimRef }}

            apiVersion: helm.crossplane.io/v1beta1
            kind: Release
            metadata:
              annotations:
                crossplane.io/external-name: {{ $claim.name }}
                gotemplating.fn.crossplane.io/composition-resource-name: "helm-release"
            spec:
              providerConfigRef:
                name: provider-helm
              forProvider:
                chart: # https://artifacthub.io/packages/helm/bitnami/spark
                  name: spark
                  repository: oci://registry-1.docker.io/bitnamicharts
                  version: 9.2.10
                namespace: {{ $claim.namespace }}
                values:
                  ingress:
                    enabled: true
                    {{- if or ($.observed.composite.resource.spec.ingress.public) (eq $.observed.composite.resource.spec.ingress nil) }}
                    ingressClassName: nginx
                    {{- else }}
                    ingressClassName: nginx-internal
                    {{- end }}
                    hostname: {{ $host }}.{{ $zone }}
                    tls: true
                    annotations: 
                      kubernetes.io/tls-acme: "true"
                  fullnameOverride: {{ $claim.name }}
                  commonLabels:
                    catalog.cluster.local/kind: {{ $claim.kind }}
                    catalog.cluster.local/name: {{ $claim.name }}
            ---
            {{ $values := dig "resources" "helm-release" "resource" "spec" "forProvider" "values" dict .observed }}

            apiVersion: meta.gotemplating.fn.crossplane.io/v1alpha1
            kind: CompositeConnectionDetails
            {{ if eq $.observed.resources nil }}
            data: {}
            {{ else }}
            data:
              host: {{ $values.ingress.hostname | b64enc }}
              port: {{ "7077" | b64enc }}
            {{ end }}

    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: crossplane-contrib-function-auto-ready