# Composition Definition: https://doc.crds.dev/github.com/crossplane/crossplane/apiextensions.crossplane.io/Composition/v1@v1.15.0
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: mariadbs.catalog.cluster.local
spec:
  compositeTypeRef:
    apiVersion: catalog.cluster.local/v1
    kind: MariaDBComposite

  writeConnectionSecretsToNamespace: crossplane-system

  mode: Pipeline
  pipeline:
    - step: mariadb
      functionRef:
        name: crossplane-contrib-function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |

            {{ $claim := .observed.composite.resource.spec.claimRef }}

            apiVersion: helm.crossplane.io/v1beta1
            kind: Release
            metadata:
              annotations:
                crossplane.io/external-name: {{ $claim.name }}
                gotemplating.fn.crossplane.io/composition-resource-name: "release"
            spec:
              providerConfigRef:
                name: provider-helm
              forProvider:
                chart: # https://artifacthub.io/packages/helm/bitnami/mariadb
                  name: mariadb
                  repository: oci://registry-1.docker.io/bitnamicharts
                  version: 19.0.3
                namespace: {{ $claim.namespace }} 
                values:
                  commonLabels:
                    catalog.cluster.local/kind: {{ $claim.kind }}
                    catalog.cluster.local/name: {{ $claim.name }} 
                  fullnameOverride:  {{ $claim.name }}
                  architecture: standalone
                  auth:
                    database: db
                  primary:
                    persistence:
                      size: 8Gi 
                    persistentVolumeClaimRetentionPolicy:
                      enabled: true
                      whenDeleted: Delete
                  metrics:
                    enabled: true
                    serviceMonitor:
                      enabled: true

              connectionDetails:
                - apiVersion: v1
                  kind: Secret
                  name: {{ $claim.name }}
                  namespace: {{ $claim.namespace }}
                  fieldPath: data.mariadb-root-password
                  toConnectionSecretKey: password

                - apiVersion: v1
                  kind: Service
                  name: {{ $claim.name }}
                  namespace: {{ $claim.namespace }}
                  fieldPath: spec.ports[0].port
                  toConnectionSecretKey: port

              writeConnectionSecretToRef:
                name: {{ $claim.name }}-connection
                namespace: {{ $claim.namespace }}

            ---
            {{ $values := .observed.resources.release.resource.spec.forProvider.values }}
            {{ $connectionDetails := .observed.resources.release.connectionDetails }}

            apiVersion: meta.gotemplating.fn.crossplane.io/v1alpha1
            kind: CompositeConnectionDetails
            {{ if eq $.observed.resources nil }}
            data: {}
            {{ else }}
            data:
              host: {{ printf "%s.%s" $claim.name $claim.namespace | b64enc }}
              username: {{ "root" | b64enc }}
              password: {{ $connectionDetails.password }}
              port: {{ $connectionDetails.port }}
            {{ end }}

    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: crossplane-contrib-function-auto-ready
