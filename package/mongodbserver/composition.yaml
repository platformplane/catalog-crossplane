apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: mongodbservers.catalog.cluster.local
  annotations:
    catalog.cluster.local/title: "MongoDB Server"
    catalog.cluster.local/description: "MongoDB is a popular NoSQL database that provides a flexible and scalable solution for storing and retrieving data. It is designed to handle large amounts of unstructured data, making it suitable for a wide range of applications."
    catalog.cluster.local/icon: "PCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj4KCjxzdmcgd2lkdGg9IjY0cHgiIGhlaWdodD0iNjRweCIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBmaWxsPSIjMDAwMDAwIj4KCjxnIGlkPSJTVkdSZXBvX2JnQ2FycmllciIgc3Ryb2tlLXdpZHRoPSIwIi8+Cgo8ZyBpZD0iU1ZHUmVwb190cmFjZXJDYXJyaWVyIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiLz4KCjxnIGlkPSJTVkdSZXBvX2ljb25DYXJyaWVyIj4gPGNpcmNsZSBjeD0iNTEyIiBjeT0iNTEyIiByPSI1MTIiIHN0eWxlPSJmaWxsOiMxM2FhNTIiLz4gPHBhdGggZD0iTTY0OC44NiA0NDkuNDRjLTMyLjM0LTE0Mi43My0xMDguNzctMTg5LjY2LTExNy0yMDcuNTktOS0xMi42NS0xOC4xMi0zNS4xNS0xOC4xMi0zNS4xNS0uMTUtLjM4LS4zOS0xLjA1LS42Ny0xLjctLjkzIDEyLjY1LTEuNDEgMTcuNTMtMTMuMzcgMzAuMjktMTguNTIgMTQuNDgtMTEzLjU0IDk0LjIxLTEyMS4yNyAyNTYuMzctNy4yMSAxNTEuMjQgMTA5LjI1IDI0MS4zNiAxMjUgMjUyLjg1bDEuNzkgMS4yN3YtLjExYy4xLjc2IDUgMzYgOC40NCA3My4zNEg1MjZhNzI2LjY4IDcyNi42OCAwIDAgMSAxMy03OC41M2wxLS42NWEyMDQuNDggMjA0LjQ4IDAgMCAwIDIwLjExLTE2LjQ1bC43Mi0uNjVjMzMuNDgtMzAuOTMgOTMuNjctMTAyLjQ3IDkzLjA4LTIxNi41M2EzNDcuMDcgMzQ3LjA3IDAgMCAwLTUuMDUtNTYuNzZ6TTUxMi4zNSA2NTkuMTJzMC0yMTIuMTIgNy0yMTIuMDhjNS40NiAwIDEyLjUzIDI3My42MSAxMi41MyAyNzMuNjEtOS43Mi0xLjE3LTE5LjUzLTQ1LjAzLTE5LjUzLTYxLjUzeiIgc3R5bGU9ImZpbGw6I2ZmZiIvPiA8L2c+Cgo8L3N2Zz4="
    catalog.cluster.local/maintainer: ""
    catalog.cluster.local/url: "https://www.mongodb.com"
    catalog.cluster.local/tags: "database,unmanaged,helm"
spec:
  compositeTypeRef:
    apiVersion: catalog.cluster.local/v1
    kind: MongoDBServerComposite

  writeConnectionSecretsToNamespace: crossplane-system

  resources:
    - name: helm-release
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          providerConfigRef:
            name: provider-helm
          forProvider:
            chart:
              name: mongodb
              repository: oci://registry-1.docker.io/bitnamicharts
              version: 15.0.2
            namespace: tbd
            values:
              commonLabels:
                catalog.cluster.local/kind: tbd
                catalog.cluster.local/name: tbd

              fullnameOverride: tbd
              architecture: standalone

              auth:
                rootUser: root

              persistence:
                size: 8Gi

              persistentVolumeClaimRetentionPolicy:
                enabled: true
                whenDeleted: Delete

              metrics:
                enabled: true

                serviceMonitor:
                  enabled: true

          connectionDetails:
            - apiVersion: v1
              kind: Secret
              name:
              namespace:
              fieldPath: data.mongodb-root-password
              toConnectionSecretKey: password

            - apiVersion: v1
              kind: Service
              name:
              namespace:
              fieldPath: spec.ports[0].port
              toConnectionSecretKey: port

          writeConnectionSecretToRef:
            namespace: tbd

      connectionDetails:
        - name: username
          type: FromValue
          value: root

        - name: password
          type: FromConnectionSecretKey
          fromConnectionSecretKey: password

        - name: port
          type: FromConnectionSecretKey
          fromConnectionSecretKey: port

        - name: host
          type: FromFieldPath
          fromFieldPath: "metadata.annotations['host']"

      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.size"
          toFieldPath: "spec.forProvider.values.persistence.size"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.values.fullnameOverride"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.values.commonLabels['catalog.cluster.local/name']"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.kind"
          toFieldPath: "spec.forProvider.values.commonLabels['catalog.cluster.local/kind']"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.namespace"
          toFieldPath: "spec.forProvider.namespace"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.connectionDetails[0].name"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.namespace"
          toFieldPath: "spec.connectionDetails[0].namespace"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.connectionDetails[1].name"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.namespace"
          toFieldPath: "spec.connectionDetails[1].namespace"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.namespace"
          toFieldPath: "spec.writeConnectionSecretToRef.namespace"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.resourceRefs[0].name"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                type: Format
                fmt: "%s-connection"

        - type: CombineToComposite
          combine:
            variables:
              - fromFieldPath: spec.forProvider.values.fullnameOverride
              - fromFieldPath: spec.forProvider.namespace
            strategy: string
            string:
              fmt: "%s.%s"
          toFieldPath: status.credentials.host

        - type: FromCompositeFieldPath
          fromFieldPath: "status.credentials.host"
          toFieldPath: "metadata.annotations['host']"
